my job is developing web pages.
1. 技术人员并非仅仅只做技术
    当一项功能模块分配下来，我认为一个好的技术人不是说只会按照原型或是设计稿一板一眼地写
下代码，所要做的有很多很多。
    现实工作中我也遇到过这样的人，代码量作为了工作量的评判标准。功能做出来似乎是对的。仔
细查看他写的代码，你会很惊讶地发现，一个问题是不少重复冗余性代码，说不上做的不对，但总是让代码整洁强迫症者难受；另一个问题是功能交互不流畅甚至不存在，仅仅因为设计上没有说明，也不会去问为什么、是什么、怎么做，甚至哭笑不得的是他知道有坑，也直接提交了代码。类似的细节问题，往往造成工作反复、效率降低。

2. 会问why/what/how
    文档、原型、设计图纸，将项目详细功能大概设计了出来；会议能对项目可行性及具体业务进行
大致的沟通，并进行项目组任务分配。这个过程大致是从上到下的。
    接下来，我认为是大致从下到上的过程。到了每个技术人员手中，你要去思考，why需要我这块
功能，我这块功能到底是什么，具体到每一个细节，你会发现文档或是设计有可能有遗漏甚至有不合理的地方。你甚至都咬着笔头想，要跟其他功能串起来的业务，怎么看怎么别扭！这时候，主动去找负责的人，沟通是最好的解决方案！并不是设计人员决定是对的那就是对的，最后做出来可是我们技术做的。所以一块复杂关键的功能有可能是与设计、项目管理、甚至领导共同反复决定最佳效果。我们能直观感觉合理不合理。
    我曾经就为了一个业务复杂分散、了解的人不多的task，从开始的到处询问，沟通后台、产品、
项目有关人员，总结出具体业务，最后得到项目管理leader的认可，与后台商量出一版适合实际业务的数据结构。

3. 总结
    总结很有必要。现在主要是用封装好的API库，不停地做项目，都没有深究过为啥要这么写。细
想下来，许多没有用过的知识点也记忆模糊，当然搜索引擎能帮忙。总结一下，思维也清晰许多了吧。
    