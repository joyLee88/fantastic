模块化

1. CommonJS是服务器端模块的规范，Node.js采用了这个规范。CommonJS规范加载模块是同步的，也就是说，只有加载完成，才能执行后面的操作。
	通过对module.exports或exports的属性赋值来达到暴露模块对象的目的

CommonJS 的规范中，每个 JavaScript 文件就是一个独立的模块上下文（module context），在这个上下文中默认创建的属性都是私有的。在一个文件定义的变量（还包括函数和类），都是私有的，对其他文件是不可见的。

同步加载模块,在浏览器中会出现堵塞情况，所以不适用

2. AMD规范则是非同步加载模块，允许指定回调函数
	通过返回一个对象做为模块对象

异步，需要定义回调define方式

3. 模块化发展
以前写 命名空间方式 -》 IIFE立即执行函数 -》 模块化规范+模块加载器

(1) amd异步加载  require.js


(2) cmd sea.js
(3) commonjs 服务端规范
(4) ESModules